/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxLevelSum(TreeNode* root) {
        if(root==NULL){
            return 0;
        }
        if(root->left==NULL and root->right==NULL){
            return 1;
        }
        queue<TreeNode*>q;
        q.push(root);
        vector<int>ans;
        while(!q.empty()){
            int n=q.size();
            int count=0;
            while(n--){
                TreeNode* f=q.front();
                q.pop();
                count+=f->val;
                if(f->left!=NULL){
                    q.push(f->left);
                }
                if(f->right!=NULL){
                    q.push(f->right);
                }
            }
            ans.push_back(count);
        }
        int res=INT_MIN;
        int j=0;
        for(int i=0;i<ans.size();i++){
            if(ans[i]>res){
                res=ans[i];
                j=i;
            }
        }
        return j+1;
    }
};
