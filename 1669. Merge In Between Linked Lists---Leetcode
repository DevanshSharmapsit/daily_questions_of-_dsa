/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeInBetween(ListNode* list1, int a, int b, ListNode* list2) {
        ListNode*temp=list1;
        ListNode*ptr=list1;
        ListNode*ptr2=list2;
        int count=1;
        int mount=0;
        while(temp->next!=NULL){
            if(count==a){
                ptr=temp->next;
                temp->next=ptr2;
                while(mount!=(b-a)){
                    ptr=ptr->next;
                    mount++;
                }
                while(ptr2->next!=NULL){
                    ptr2=ptr2->next;
                }
                ptr2->next=ptr->next;
                break;
            }
            count++;
            temp=temp->next;
        }
        return list1;
    }
};
