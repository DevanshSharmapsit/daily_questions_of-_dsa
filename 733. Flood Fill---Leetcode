class Solution {
public:
    void dfs(vector<vector<int>>& image, int i, int j, int n, int m, int k,int color) {
        if (i < 0 || j < 0 || i >= n || j >= m || image[i][j]!=k){
            return;
        }
        if (k == image[i][j]) {
            image[i][j] = color;
        }
        dfs(image, i - 1, j, n, m, k, color);
        dfs(image, i, j - 1, n, m, k, color);
        dfs(image, i, j + 1, n, m, k, color);
        dfs(image, i + 1, j, n, m, k, color);
        return;
    }
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc,
                                  int color) {
        if (image[sr][sc] == color) {
            return image;
        }
        int n = image.size();
        int m = image[0].size();
        int k = image[sr][sc];
        dfs(image, sr, sc, n, m, k, color);
        return image;
    }
};
