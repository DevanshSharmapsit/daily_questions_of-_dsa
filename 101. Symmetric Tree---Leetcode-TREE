/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
bool t=true;
bool solve(TreeNode* leftchild,TreeNode* rightchild){
    if(leftchild==NULL and rightchild==NULL){
        return true;
    }
    if(leftchild==NULL and rightchild!=NULL){ t=false;return false;}
    if(leftchild!=NULL and rightchild==NULL){t=false;return false;}
    if(leftchild->val!=rightchild->val){
        t=false;
        return false;
    }
    solve(leftchild->left,rightchild->right);
    solve(leftchild->right,rightchild->left);
    return true;
}
    bool isSymmetric(TreeNode* root) {
        solve(root->left,root->right);
        return t;
    }
};
