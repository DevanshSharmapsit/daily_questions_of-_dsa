/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>>result;
    void solve(TreeNode* root,int sum, int &targetSum ,vector<int>paths){
        if(root==NULL){
            return;
        }
        paths.push_back(root->val);
        sum+=root->val;
        if(root->left ==NULL and root->right==NULL){
            if(sum==targetSum){
                result.push_back(paths);
            }
            return;
        }
        solve(root->left,sum,targetSum,paths);
        solve(root->right,sum,targetSum,paths);
    }
    vector<vector<int>> pathSum(TreeNode* root, int targetSum){
        vector<int>paths;
        int sum=0;
        solve(root,sum,targetSum,paths);
        return result;
    }
};
