/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
int maxsum;

    int solve(TreeNode* root,int &maxsum){
        if(root==NULL){
            return 0;
        }
        int l=max(0,solve(root->left,maxsum));
        int r=max(0,solve(root->right,maxsum));
        // int neeche_mil_gya=l+r+root->val;
        // int koi_ek_accha=max(l,r)+root->val;
        // int only_root_accha=root->val;

        maxsum=max(maxsum,l+r+root->val);
        return max(l,r)+root->val;
    }
    int maxPathSum(TreeNode* root) {
        maxsum=INT_MIN;
        solve(root,maxsum);
        return maxsum;
    }
};
