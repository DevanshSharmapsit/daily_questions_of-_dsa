class Solution {
public:
#define p pair<int,int>
    vector<int> getFinalState(vector<int>& nums, int k, int multiplier) {
        //int mini=INT_MAX;

//while(k--){
          //  int i=0;
            //int index=0;
           // while(i<nums.size()){
             //   if(mini>nums[i]){
               //     mini=nums[i];
                 //   index=i;
          //      }
            //    i++;
         //   }
         //   nums[index]=multiplier*mini;
         //   mini=INT_MAX;
     //   }
      //  return nums;

        priority_queue<p,vector<p>,greater<p>>pq;

        for(int i=0;i<nums.size();i++){
            pq.push({nums[i],i});
        }
        
        while(k--){
            auto t = pq.top();
            pq.pop();
            int l=t.first;
            int m=t.second;
            nums[m]=l*multiplier;
            pq.push({nums[m],m});
        }
        return nums;
    }
};
