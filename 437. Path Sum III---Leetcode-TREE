/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int solve(TreeNode* root,int targetSum,long int currsum,unordered_map<long int,int>mp){
        if(root==NULL){
            return 0;
        }
        currsum+=root->val;
        int anssum=mp[currsum-targetSum];
        mp[currsum]++;
        anssum+=solve(root->left,targetSum,currsum,mp)+solve(root->right,targetSum,currsum,mp);
        mp[currsum]--;
        return anssum;
    }
    int pathSum(TreeNode* root, int targetSum) {
        unordered_map<long int,int>mp;
        mp[0]=1;
        return solve(root,targetSum,0,mp);
    }
};
