class Solution {
public:
    vector<int> productExceptSelf(vector<int>& nums) {
        // int prod=1;
        // for(int i=0;i<nums.size();i++){
        //     prod*=nums[i];
        // }
        // vector<int>ans;
        // for(int i=0;i<nums[i];i++){
        //     ans.push_back(1/nums[i]);
        // }
        // vector<int>res;
        // for(int j=0;j<nums.size();j++){
        //     res.push_back(prod);
        // }
        // return res;

        // vector<int>presum;
        // presum[0]=nums[0];
        // for(int i=1;i<nums.size();i++){
        //     presum.push_back(presum[i]+nums[i]);
        // }

        int n = nums.size();
        vector<int> result(n);
        result[0] = 1;
        
        for(int i = 1; i<nums.size(); i++) {
            result[i] = result[i-1]*nums[i-1];
        }
        
        int right = 1;
        for(int i = n-1; i>=0; i--) {
            result[i] = result[i]*right;
            right *= nums[i];
        }
        
        return result;
        
    }
};
