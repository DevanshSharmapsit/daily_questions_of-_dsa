class Solution {
public:
string makebinary(int goal){
    string ans="";
    int n=goal;
    while(n>0){
        char c=n%2+'0';
        ans+=c;
        n=n/2;
    }
    return ans;
}
    int minBitFlips(int start, int goal) {
        string target=makebinary(goal);
        string ready=makebinary(start);
       
        while(target.size()<ready.size()){
            target+='0';
        }
        while(target.size()>ready.size()){
            ready+='0';
        }
        cout<<target<<endl;
        cout<<ready<<endl;
        int i=target.size()-1;
        int j=ready.size()-1;
        int count=0;
        while(i>=0 and j>=0){
            if(target[i]!=ready[j]){
                count++;
            }
            i--;
            j--;
        }
        while(i>=0){
            count++;
            i--;
        }
        while(j>=0){
            count++;
            j--;
        }
        return count;
    }
};
