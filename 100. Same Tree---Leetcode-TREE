/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution{
public:
bool k=true;
    bool solve(TreeNode* p,TreeNode* q){
        if(p==NULL and q==NULL){
            return true;
        }
        else if(p==NULL or q==NULL){
            k=false;
            return false;
        }
        if(p->val!=q->val){
            cout<<"my"<<endl;
            k=false;
            return true;
        }
        solve(p->left,q->left);
        solve(p->right,q->right);
        return true;
    }
    bool isSameTree(TreeNode* p, TreeNode* q) {
        solve(p,q);
        return k;
    }
};
