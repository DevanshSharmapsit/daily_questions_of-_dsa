class Solution {
public:
// vector<vector<int>>res;
// void subsets(int i,vector<int>& nums,vector<int>temp){
//     if(i>=nums.size()){
//         res.push_back(temp);
//         return;
//     }
//     temp.push_back(nums[i]);
//     subsets(i+1,nums,temp);
//     temp.pop_back();
//     subsets(i+1,nums,temp);
// }
int solve(int i,vector<int>nums,int Xor){
    if(i==nums.size()){
        return Xor;
    }

    int include=solve(i+1,nums,nums[i]^Xor);
    int exclude=solve(i+1,nums,Xor);
    return include+exclude;
}
    int subsetXORSum(vector<int>& nums) {
        // int sum=0;
        // int k;
        // int n=nums.size();
        // int i=0;
        // vector<int>temp;
        // subsets(i,nums,temp);

        // for(int i=0;i<res.size();i++){
        //     k=0;
        //     for(int j=0;j<res[i].size();j++){
        //         k=k^res[i][j];
        //     }
        //     sum+=k;
        // }
        // return sum;
        int Xor=0;
        return solve(0,nums,0);
    }
};
