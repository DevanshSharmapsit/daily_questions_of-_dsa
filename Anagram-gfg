//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution {
  public:
    // Function is to check whether two strings are anagram of each other or not.
    bool areAnagrams(string& s1, string& s2) {
        // Your code here
        // sort(s1.begin(),s1.end());
        // sort(s2.begin(),s2.end());
        // if(s1==s2){
        //     return true;
        // }
        // return false;
        
        
        unordered_map<char,int>mp1;
        
        for(int i=0;i<s1.size();i++){
            mp1[s1[i]]++;
        }
        unordered_map<char,int>mp2;
        
        for(int i=0;i<s2.size();i++){
            mp2[s2[i]]++;
        }
        
        if(mp1.size()!=mp2.size()){
            return false;
        }
        

    for (auto& i : mp1) {
        if (mp2.find(i.first) == mp2.end() || mp2[i.first] != i.second) {
                    return false;
                }
        }
        return true;
    }
};

//{ Driver Code Starts.

int main() {

    int t;

    cin >> t;

    while (t--) {
        string c, d;

        cin >> c >> d;
        Solution obj;
        if (obj.areAnagrams(c, d))
            cout << "true" << endl;
        else
            cout << "false" << endl;
        cout << "~" << endl;
    }
}

// } Driver Code Ends
