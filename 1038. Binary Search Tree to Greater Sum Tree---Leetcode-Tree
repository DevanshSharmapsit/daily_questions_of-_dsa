/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left),
 * right(right) {}
 * };
 */
class Solution {
public:
    void sums(TreeNode* root,int &sum) {
        if(root==NULL){
            return;
        }
        if (root==NULL and root->left == NULL and root->right == NULL) {
            return;
        }
        if(root!=NULL)sum += root->val;
        if(root!=NULL)sums(root->left,sum);
        if(root!=NULL)sums(root->right,sum);
    }
    int t=0;
    void inorder(TreeNode* root,int &sum){
        if(root==NULL)return;
        if(root->left==NULL and  root->right==NULL){
            t=root->val;
            root->val=sum;
            sum-=t;
            return;
        }
        inorder(root->left,sum);
        t=root->val;
        root->val=sum;
        sum-=t;
        inorder(root->right,sum);
    }
    TreeNode* bstToGst(TreeNode* root) {
        int sum=0;
        sums(root,sum);
        cout<<sum;
        inorder(root,sum);
        return root;
    }
};
