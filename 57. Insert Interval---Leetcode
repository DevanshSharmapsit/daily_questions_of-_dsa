class Solution {
public:
    vector<vector<int>> insert(vector<vector<int>>& intervals, vector<int>& newInterval) {
        // vector<vector<int>>ans;
        // int a=newInterval[0];
        // int b=newInterval[1];
        // int k=0;
        // int i=0;
        // while(i<intervals.size()){
        //     if(intervals[i][1]<a){                          
        //         ans.push_back(intervals[i]);
        //     }
        //     else if(intervals[i][0]<b){ 
        //         int m=intervals[i][0];
        //         int n=0;
        //         i++;
        //         while(1){
        //             if(intervals[i][0]>b){
        //                 break;
        //             }
        //             else if(intervals[i][1]<b){
        //                 i++;
        //                 continue;
        //             }
        //             else if(intervals[i][0]==b){
        //                 n=intervals[i][1];
        //                 break;
        //             }
        //             i++;
        //         }
        //         ans.push_back({m,n});
        //     }
        //     else if(intervals[i][0]>b){
        //         ans[i-1][1]=b;
        //         k=i;
        //         ans.push_back(intervals[i]);
        //         break;
        //     }
        //     else{
        //         continue;
        //     }
        //     i++;
        // }
        // return ans;
        vector<vector<int>> ans;
        int a = newInterval[0];
        int b = newInterval[1];
        int i = 0;
        while (i < intervals.size()) {
            if (intervals[i][1] < a) {
                ans.push_back(intervals[i]);
            }
            else if (intervals[i][0] > b) {
                break;
            }
            else {
                a = min(a, intervals[i][0]);
                b = max(b, intervals[i][1]);
            }
            i++;
        }
        ans.push_back({a, b});
        while (i < intervals.size()) {
            ans.push_back(intervals[i]);
            i++;
        }
        return ans;
    }
};
