class Solution {
public:
    bool isIsomorphic(string s, string t) {
        // if(s.length()!=t.length()){
        //     return false;
        // }
        unordered_map<char,int>mp;
        unordered_map<char,int>zp;
        // for(auto i:s){
        //     mp[i]++;
        // }
        // for(auto j:t){
        //     zp[j]++;
        // }
        // vector<int>m;
        // vector<int>n;
        // for(auto x:mp){
        //     m.push_back(x.second);
        // }
        // for(auto x:zp){
        //     n.push_back(x.second);
        // }
        // for(int i=0;i<m.size();i++){
        //     if(m[i]!=n[i]){
        //         return false;
        //     }
        // }
        int n=s.size();
        for(int i=0;i<n;i++){
            char ch1=s[i];
            char ch2=t[i];
            if(mp.find(ch1)!=mp.end() && mp[ch1]!=ch2 || zp.find(ch2)!=zp.end() && zp[ch2]!=ch1){
                return false;
            }
            mp[ch1]=ch2;
            zp[ch2]=ch1;
        }
        return true;
    }
};
