class Solution {
public:
vector<vector<int>>grid;
vector<vector<int>>dp;
int f(int row,int col){
    if(row==grid.size()-1){
        return grid[row][col];
    }
    if(dp[row][col]!=-1){
        return dp[row][col];
    }
    return dp[row][col]=grid[row][col]+min(f(row+1,col),f(row+1,col+1));
}
int minimumTotal(vector<vector<int>>& triangle) {
    grid=triangle;
    dp.resize(205,vector<int>(205,-1));
    // return f(0,0);
    int rows=grid.size();
    for(int i=0;i<grid[rows-1].size();i++){
        dp[rows-1][i]=grid[rows-1][i];
    }
    for(int i=rows-2;i>=0;i--){
        for(int j=0;j<grid[i].size();j++){
            dp[i][j]=grid[i][j]+min(dp[i+1][j],dp[i+1][j+1]);
        }
    }
    return dp[0][0];
}
};
