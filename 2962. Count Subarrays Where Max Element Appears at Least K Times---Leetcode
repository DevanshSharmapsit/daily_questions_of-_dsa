class Solution {
public:
    long long countSubarrays(vector<int>& nums, int k) {
        // int count=0;
        // int res=0;
        // for(int i=0;i<nums.size();i++){
        //     for(int j=i;j<nums.size();j++){
        //         if(nums[j]==maxi){
        //             count++;
        //         }
        //         if(count>=k){
        //             res++;
        //         }
        //     }
        // }
        // return res;


        long long maxi=INT_MIN;
        for(int i=0;i<nums.size();i++){
            if(nums[i]>maxi){
                maxi=nums[i];
            }
        }
        int i=0;
        int j=0;
        unordered_map<int,int>mp;
        long long count=0;
        while(j<nums.size()){
            if(nums[j]==maxi){
                mp[nums[j]]++;
            }
            while(i<=j and mp[nums[j]]>=k){
                count++;
                long long  c=nums.size()-j-1;
                count+=c;
                if(nums[i]==maxi){
                    mp[nums[j]]--; 
                }
                // else{
                //     i++;
                //     count++;
                // }
                // if(mp[nums[j]>=k]){
                //         count++;
                // }
                i++;
            }
            j++;
        }
        return count;

    }
};
